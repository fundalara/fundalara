package modelo;

// Generated 10/02/2012 11:18:51 PM by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * DatoBasico generated by hbm2java
 */
@Entity
@Table(name = "dato_basico", schema = "public")
public class DatoBasico implements java.io.Serializable {

	private int codigoDatoBasico;
	private TipoDato tipoDato;
	private DatoBasico datoBasico;
	private String nombre;
	private String descripcion;
	private Boolean edicion;
	private char estatus;
	private Set<RetiroTraslado> retiroTrasladosForCodigoTipoOperacion = new HashSet<RetiroTraslado>(
			0);
	private Set<JugadorPlan> jugadorPlans = new HashSet<JugadorPlan>(0);
	private Set<Jugador> jugadorsForCodigoPais = new HashSet<Jugador>(0);
	private Set<EgresoFormaPago> egresoFormaPagos = new HashSet<EgresoFormaPago>(
			0);
	private Set<Divisa> divisas = new HashSet<Divisa>(0);
	private Set<DatoBasico> datoBasicos = new HashSet<DatoBasico>(0);
	private Set<PersonalTipoNomina> personalTipoNominas = new HashSet<PersonalTipoNomina>(
			0);
	private Set<Jugador> jugadorsForCodigoParroquiaNacimiento = new HashSet<Jugador>(
			0);
	private Set<ProveedorBanco> proveedorBancosForCodigoBanco = new HashSet<ProveedorBanco>(
			0);
	private Set<Equipo> equiposForCodigoClasificacion = new HashSet<Equipo>(0);
	private Set<Persona> personasForCodigoParroquia = new HashSet<Persona>(0);
	private Set<ProveedorBanco> proveedorBancosForCodigoTipoCuenta = new HashSet<ProveedorBanco>(
			0);
	private Set<PersonalContrato> personalContratosForCodigoHorario = new HashSet<PersonalContrato>(
			0);
	private Set<Material> materialsForCodigoTipoMaterial = new HashSet<Material>(
			0);
	private Set<TareaActividadPlanificada> tareaActividadPlanificadas = new HashSet<TareaActividadPlanificada>(
			0);
	private Set<TareaActividad> tareaActividadsForEstadoTarea = new HashSet<TareaActividad>(
			0);
	private Set<PersonalSuplente> personalSuplentes = new HashSet<PersonalSuplente>(
			0);
	private Set<IngresoFormaPago> ingresoFormaPagos = new HashSet<IngresoFormaPago>(
			0);
	private Set<Equipo> equiposForCodigoTipoLapso = new HashSet<Equipo>(0);
	private Set<ResultadoActividad> resultadoActividads = new HashSet<ResultadoActividad>(
			0);
	private Set<InstalacionEjecutada> instalacionEjecutadas = new HashSet<InstalacionEjecutada>(
			0);
	private Set<Nomina> nominas = new HashSet<Nomina>(0);
	private Set<AsistenciaPersonalEntrenamiento> asistenciaPersonalEntrenamientos = new HashSet<AsistenciaPersonalEntrenamiento>(
			0);
	private Set<RetiroTraslado> retiroTrasladosForCodigoMotivoRetiro = new HashSet<RetiroTraslado>(
			0);
	private Set<PersonalContrato> personalContratosForCodigoModalidad = new HashSet<PersonalContrato>(
			0);
	private Set<ActividadCalendario> actividadCalendarios = new HashSet<ActividadCalendario>(
			0);
	private Set<Persona> personasForCodigoTipoPersona = new HashSet<Persona>(0);
	private Set<CuentaPagar> cuentaPagarsForCodigoTipoDocumento = new HashSet<CuentaPagar>(
			0);
	private Set<PlanificacionActividad> planificacionActividads = new HashSet<PlanificacionActividad>(
			0);
	private Set<LogroPorJugador> logroPorJugadors = new HashSet<LogroPorJugador>(
			0);
	private Set<MotivoSancion> motivoSancions = new HashSet<MotivoSancion>(0);
	private Set<Material> materialsForCodigoUnidadMedida = new HashSet<Material>(
			0);
	private Set<TareaActividad> tareaActividadsForCodigoTarea = new HashSet<TareaActividad>(
			0);
	private Set<CuentaPagar> cuentaPagarsForCodigoTipoEgreso = new HashSet<CuentaPagar>(
			0);
	private Set<PersonaNatural> personaNaturals = new HashSet<PersonaNatural>(0);
	private Set<ConceptoNomina> conceptoNominas = new HashSet<ConceptoNomina>(0);

	public DatoBasico() {
	}

	public DatoBasico(int codigoDatoBasico, TipoDato tipoDato, String nombre,
			char estatus) {
		this.codigoDatoBasico = codigoDatoBasico;
		this.tipoDato = tipoDato;
		this.nombre = nombre;
		this.estatus = estatus;
	}

	public DatoBasico(
			int codigoDatoBasico,
			TipoDato tipoDato,
			DatoBasico datoBasico,
			String nombre,
			String descripcion,
			Boolean edicion,
			char estatus,
			Set<RetiroTraslado> retiroTrasladosForCodigoTipoOperacion,
			Set<JugadorPlan> jugadorPlans,
			Set<Jugador> jugadorsForCodigoPais,
			Set<EgresoFormaPago> egresoFormaPagos,
			Set<Divisa> divisas,
			Set<DatoBasico> datoBasicos,
			Set<PersonalTipoNomina> personalTipoNominas,
			Set<Jugador> jugadorsForCodigoParroquiaNacimiento,
			Set<ProveedorBanco> proveedorBancosForCodigoBanco,
			Set<Equipo> equiposForCodigoClasificacion,
			Set<Persona> personasForCodigoParroquia,
			Set<ProveedorBanco> proveedorBancosForCodigoTipoCuenta,
			Set<PersonalContrato> personalContratosForCodigoHorario,
			Set<Material> materialsForCodigoTipoMaterial,
			Set<TareaActividadPlanificada> tareaActividadPlanificadas,
			Set<TareaActividad> tareaActividadsForEstadoTarea,
			Set<PersonalSuplente> personalSuplentes,
			Set<IngresoFormaPago> ingresoFormaPagos,
			Set<Equipo> equiposForCodigoTipoLapso,
			Set<ResultadoActividad> resultadoActividads,
			Set<InstalacionEjecutada> instalacionEjecutadas,
			Set<Nomina> nominas,
			Set<AsistenciaPersonalEntrenamiento> asistenciaPersonalEntrenamientos,
			Set<RetiroTraslado> retiroTrasladosForCodigoMotivoRetiro,
			Set<PersonalContrato> personalContratosForCodigoModalidad,
			Set<ActividadCalendario> actividadCalendarios,
			Set<Persona> personasForCodigoTipoPersona,
			Set<CuentaPagar> cuentaPagarsForCodigoTipoDocumento,
			Set<PlanificacionActividad> planificacionActividads,
			Set<LogroPorJugador> logroPorJugadors,
			Set<MotivoSancion> motivoSancions,
			Set<Material> materialsForCodigoUnidadMedida,
			Set<TareaActividad> tareaActividadsForCodigoTarea,
			Set<CuentaPagar> cuentaPagarsForCodigoTipoEgreso,
			Set<PersonaNatural> personaNaturals,
			Set<ConceptoNomina> conceptoNominas) {
		this.codigoDatoBasico = codigoDatoBasico;
		this.tipoDato = tipoDato;
		this.datoBasico = datoBasico;
		this.nombre = nombre;
		this.descripcion = descripcion;
		this.edicion = edicion;
		this.estatus = estatus;
		this.retiroTrasladosForCodigoTipoOperacion = retiroTrasladosForCodigoTipoOperacion;
		this.jugadorPlans = jugadorPlans;
		this.jugadorsForCodigoPais = jugadorsForCodigoPais;
		this.egresoFormaPagos = egresoFormaPagos;
		this.divisas = divisas;
		this.datoBasicos = datoBasicos;
		this.personalTipoNominas = personalTipoNominas;
		this.jugadorsForCodigoParroquiaNacimiento = jugadorsForCodigoParroquiaNacimiento;
		this.proveedorBancosForCodigoBanco = proveedorBancosForCodigoBanco;
		this.equiposForCodigoClasificacion = equiposForCodigoClasificacion;
		this.personasForCodigoParroquia = personasForCodigoParroquia;
		this.proveedorBancosForCodigoTipoCuenta = proveedorBancosForCodigoTipoCuenta;
		this.personalContratosForCodigoHorario = personalContratosForCodigoHorario;
		this.materialsForCodigoTipoMaterial = materialsForCodigoTipoMaterial;
		this.tareaActividadPlanificadas = tareaActividadPlanificadas;
		this.tareaActividadsForEstadoTarea = tareaActividadsForEstadoTarea;
		this.personalSuplentes = personalSuplentes;
		this.ingresoFormaPagos = ingresoFormaPagos;
		this.equiposForCodigoTipoLapso = equiposForCodigoTipoLapso;
		this.resultadoActividads = resultadoActividads;
		this.instalacionEjecutadas = instalacionEjecutadas;
		this.nominas = nominas;
		this.asistenciaPersonalEntrenamientos = asistenciaPersonalEntrenamientos;
		this.retiroTrasladosForCodigoMotivoRetiro = retiroTrasladosForCodigoMotivoRetiro;
		this.personalContratosForCodigoModalidad = personalContratosForCodigoModalidad;
		this.actividadCalendarios = actividadCalendarios;
		this.personasForCodigoTipoPersona = personasForCodigoTipoPersona;
		this.cuentaPagarsForCodigoTipoDocumento = cuentaPagarsForCodigoTipoDocumento;
		this.planificacionActividads = planificacionActividads;
		this.logroPorJugadors = logroPorJugadors;
		this.motivoSancions = motivoSancions;
		this.materialsForCodigoUnidadMedida = materialsForCodigoUnidadMedida;
		this.tareaActividadsForCodigoTarea = tareaActividadsForCodigoTarea;
		this.cuentaPagarsForCodigoTipoEgreso = cuentaPagarsForCodigoTipoEgreso;
		this.personaNaturals = personaNaturals;
		this.conceptoNominas = conceptoNominas;
	}

	@Id
	@Column(name = "codigo_dato_basico", unique = true, nullable = false)
	public int getCodigoDatoBasico() {
		return this.codigoDatoBasico;
	}

	public void setCodigoDatoBasico(int codigoDatoBasico) {
		this.codigoDatoBasico = codigoDatoBasico;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "codigo_tipo_dato", nullable = false)
	public TipoDato getTipoDato() {
		return this.tipoDato;
	}

	public void setTipoDato(TipoDato tipoDato) {
		this.tipoDato = tipoDato;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "parent_codigo_dato_basico")
	public DatoBasico getDatoBasico() {
		return this.datoBasico;
	}

	public void setDatoBasico(DatoBasico datoBasico) {
		this.datoBasico = datoBasico;
	}

	@Column(name = "nombre", nullable = false)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Column(name = "descripcion")
	public String getDescripcion() {
		return this.descripcion;
	}

	public void setDescripcion(String descripcion) {
		this.descripcion = descripcion;
	}

	@Column(name = "edicion")
	public Boolean getEdicion() {
		return this.edicion;
	}

	public void setEdicion(Boolean edicion) {
		this.edicion = edicion;
	}

	@Column(name = "estatus", nullable = false, length = 1)
	public char getEstatus() {
		return this.estatus;
	}

	public void setEstatus(char estatus) {
		this.estatus = estatus;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "datoBasicoByCodigoTipoOperacion")
	public Set<RetiroTraslado> getRetiroTrasladosForCodigoTipoOperacion() {
		return this.retiroTrasladosForCodigoTipoOperacion;
	}

	public void setRetiroTrasladosForCodigoTipoOperacion(
			Set<RetiroTraslado> retiroTrasladosForCodigoTipoOperacion) {
		this.retiroTrasladosForCodigoTipoOperacion = retiroTrasladosForCodigoTipoOperacion;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "datoBasico")
	public Set<JugadorPlan> getJugadorPlans() {
		return this.jugadorPlans;
	}

	public void setJugadorPlans(Set<JugadorPlan> jugadorPlans) {
		this.jugadorPlans = jugadorPlans;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "datoBasicoByCodigoPais")
	public Set<Jugador> getJugadorsForCodigoPais() {
		return this.jugadorsForCodigoPais;
	}

	public void setJugadorsForCodigoPais(Set<Jugador> jugadorsForCodigoPais) {
		this.jugadorsForCodigoPais = jugadorsForCodigoPais;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "datoBasico")
	public Set<EgresoFormaPago> getEgresoFormaPagos() {
		return this.egresoFormaPagos;
	}

	public void setEgresoFormaPagos(Set<EgresoFormaPago> egresoFormaPagos) {
		this.egresoFormaPagos = egresoFormaPagos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "datoBasico")
	public Set<Divisa> getDivisas() {
		return this.divisas;
	}

	public void setDivisas(Set<Divisa> divisas) {
		this.divisas = divisas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "datoBasico")
	public Set<DatoBasico> getDatoBasicos() {
		return this.datoBasicos;
	}

	public void setDatoBasicos(Set<DatoBasico> datoBasicos) {
		this.datoBasicos = datoBasicos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "datoBasico")
	public Set<PersonalTipoNomina> getPersonalTipoNominas() {
		return this.personalTipoNominas;
	}

	public void setPersonalTipoNominas(
			Set<PersonalTipoNomina> personalTipoNominas) {
		this.personalTipoNominas = personalTipoNominas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "datoBasicoByCodigoParroquiaNacimiento")
	public Set<Jugador> getJugadorsForCodigoParroquiaNacimiento() {
		return this.jugadorsForCodigoParroquiaNacimiento;
	}

	public void setJugadorsForCodigoParroquiaNacimiento(
			Set<Jugador> jugadorsForCodigoParroquiaNacimiento) {
		this.jugadorsForCodigoParroquiaNacimiento = jugadorsForCodigoParroquiaNacimiento;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "datoBasicoByCodigoBanco")
	public Set<ProveedorBanco> getProveedorBancosForCodigoBanco() {
		return this.proveedorBancosForCodigoBanco;
	}

	public void setProveedorBancosForCodigoBanco(
			Set<ProveedorBanco> proveedorBancosForCodigoBanco) {
		this.proveedorBancosForCodigoBanco = proveedorBancosForCodigoBanco;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "datoBasicoByCodigoClasificacion")
	public Set<Equipo> getEquiposForCodigoClasificacion() {
		return this.equiposForCodigoClasificacion;
	}

	public void setEquiposForCodigoClasificacion(
			Set<Equipo> equiposForCodigoClasificacion) {
		this.equiposForCodigoClasificacion = equiposForCodigoClasificacion;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "datoBasicoByCodigoParroquia")
	public Set<Persona> getPersonasForCodigoParroquia() {
		return this.personasForCodigoParroquia;
	}

	public void setPersonasForCodigoParroquia(
			Set<Persona> personasForCodigoParroquia) {
		this.personasForCodigoParroquia = personasForCodigoParroquia;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "datoBasicoByCodigoTipoCuenta")
	public Set<ProveedorBanco> getProveedorBancosForCodigoTipoCuenta() {
		return this.proveedorBancosForCodigoTipoCuenta;
	}

	public void setProveedorBancosForCodigoTipoCuenta(
			Set<ProveedorBanco> proveedorBancosForCodigoTipoCuenta) {
		this.proveedorBancosForCodigoTipoCuenta = proveedorBancosForCodigoTipoCuenta;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "datoBasicoByCodigoHorario")
	public Set<PersonalContrato> getPersonalContratosForCodigoHorario() {
		return this.personalContratosForCodigoHorario;
	}

	public void setPersonalContratosForCodigoHorario(
			Set<PersonalContrato> personalContratosForCodigoHorario) {
		this.personalContratosForCodigoHorario = personalContratosForCodigoHorario;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "datoBasicoByCodigoTipoMaterial")
	public Set<Material> getMaterialsForCodigoTipoMaterial() {
		return this.materialsForCodigoTipoMaterial;
	}

	public void setMaterialsForCodigoTipoMaterial(
			Set<Material> materialsForCodigoTipoMaterial) {
		this.materialsForCodigoTipoMaterial = materialsForCodigoTipoMaterial;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "datoBasico")
	public Set<TareaActividadPlanificada> getTareaActividadPlanificadas() {
		return this.tareaActividadPlanificadas;
	}

	public void setTareaActividadPlanificadas(
			Set<TareaActividadPlanificada> tareaActividadPlanificadas) {
		this.tareaActividadPlanificadas = tareaActividadPlanificadas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "datoBasicoByEstadoTarea")
	public Set<TareaActividad> getTareaActividadsForEstadoTarea() {
		return this.tareaActividadsForEstadoTarea;
	}

	public void setTareaActividadsForEstadoTarea(
			Set<TareaActividad> tareaActividadsForEstadoTarea) {
		this.tareaActividadsForEstadoTarea = tareaActividadsForEstadoTarea;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "datoBasico")
	public Set<PersonalSuplente> getPersonalSuplentes() {
		return this.personalSuplentes;
	}

	public void setPersonalSuplentes(Set<PersonalSuplente> personalSuplentes) {
		this.personalSuplentes = personalSuplentes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "datoBasico")
	public Set<IngresoFormaPago> getIngresoFormaPagos() {
		return this.ingresoFormaPagos;
	}

	public void setIngresoFormaPagos(Set<IngresoFormaPago> ingresoFormaPagos) {
		this.ingresoFormaPagos = ingresoFormaPagos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "datoBasicoByCodigoTipoLapso")
	public Set<Equipo> getEquiposForCodigoTipoLapso() {
		return this.equiposForCodigoTipoLapso;
	}

	public void setEquiposForCodigoTipoLapso(
			Set<Equipo> equiposForCodigoTipoLapso) {
		this.equiposForCodigoTipoLapso = equiposForCodigoTipoLapso;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "datoBasico")
	public Set<ResultadoActividad> getResultadoActividads() {
		return this.resultadoActividads;
	}

	public void setResultadoActividads(
			Set<ResultadoActividad> resultadoActividads) {
		this.resultadoActividads = resultadoActividads;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "datoBasico")
	public Set<InstalacionEjecutada> getInstalacionEjecutadas() {
		return this.instalacionEjecutadas;
	}

	public void setInstalacionEjecutadas(
			Set<InstalacionEjecutada> instalacionEjecutadas) {
		this.instalacionEjecutadas = instalacionEjecutadas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "datoBasico")
	public Set<Nomina> getNominas() {
		return this.nominas;
	}

	public void setNominas(Set<Nomina> nominas) {
		this.nominas = nominas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "datoBasico")
	public Set<AsistenciaPersonalEntrenamiento> getAsistenciaPersonalEntrenamientos() {
		return this.asistenciaPersonalEntrenamientos;
	}

	public void setAsistenciaPersonalEntrenamientos(
			Set<AsistenciaPersonalEntrenamiento> asistenciaPersonalEntrenamientos) {
		this.asistenciaPersonalEntrenamientos = asistenciaPersonalEntrenamientos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "datoBasicoByCodigoMotivoRetiro")
	public Set<RetiroTraslado> getRetiroTrasladosForCodigoMotivoRetiro() {
		return this.retiroTrasladosForCodigoMotivoRetiro;
	}

	public void setRetiroTrasladosForCodigoMotivoRetiro(
			Set<RetiroTraslado> retiroTrasladosForCodigoMotivoRetiro) {
		this.retiroTrasladosForCodigoMotivoRetiro = retiroTrasladosForCodigoMotivoRetiro;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "datoBasicoByCodigoModalidad")
	public Set<PersonalContrato> getPersonalContratosForCodigoModalidad() {
		return this.personalContratosForCodigoModalidad;
	}

	public void setPersonalContratosForCodigoModalidad(
			Set<PersonalContrato> personalContratosForCodigoModalidad) {
		this.personalContratosForCodigoModalidad = personalContratosForCodigoModalidad;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "datoBasico")
	public Set<ActividadCalendario> getActividadCalendarios() {
		return this.actividadCalendarios;
	}

	public void setActividadCalendarios(
			Set<ActividadCalendario> actividadCalendarios) {
		this.actividadCalendarios = actividadCalendarios;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "datoBasicoByCodigoTipoPersona")
	public Set<Persona> getPersonasForCodigoTipoPersona() {
		return this.personasForCodigoTipoPersona;
	}

	public void setPersonasForCodigoTipoPersona(
			Set<Persona> personasForCodigoTipoPersona) {
		this.personasForCodigoTipoPersona = personasForCodigoTipoPersona;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "datoBasicoByCodigoTipoDocumento")
	public Set<CuentaPagar> getCuentaPagarsForCodigoTipoDocumento() {
		return this.cuentaPagarsForCodigoTipoDocumento;
	}

	public void setCuentaPagarsForCodigoTipoDocumento(
			Set<CuentaPagar> cuentaPagarsForCodigoTipoDocumento) {
		this.cuentaPagarsForCodigoTipoDocumento = cuentaPagarsForCodigoTipoDocumento;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "datoBasico")
	public Set<PlanificacionActividad> getPlanificacionActividads() {
		return this.planificacionActividads;
	}

	public void setPlanificacionActividads(
			Set<PlanificacionActividad> planificacionActividads) {
		this.planificacionActividads = planificacionActividads;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "datoBasico")
	public Set<LogroPorJugador> getLogroPorJugadors() {
		return this.logroPorJugadors;
	}

	public void setLogroPorJugadors(Set<LogroPorJugador> logroPorJugadors) {
		this.logroPorJugadors = logroPorJugadors;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "datoBasico")
	public Set<MotivoSancion> getMotivoSancions() {
		return this.motivoSancions;
	}

	public void setMotivoSancions(Set<MotivoSancion> motivoSancions) {
		this.motivoSancions = motivoSancions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "datoBasicoByCodigoUnidadMedida")
	public Set<Material> getMaterialsForCodigoUnidadMedida() {
		return this.materialsForCodigoUnidadMedida;
	}

	public void setMaterialsForCodigoUnidadMedida(
			Set<Material> materialsForCodigoUnidadMedida) {
		this.materialsForCodigoUnidadMedida = materialsForCodigoUnidadMedida;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "datoBasicoByCodigoTarea")
	public Set<TareaActividad> getTareaActividadsForCodigoTarea() {
		return this.tareaActividadsForCodigoTarea;
	}

	public void setTareaActividadsForCodigoTarea(
			Set<TareaActividad> tareaActividadsForCodigoTarea) {
		this.tareaActividadsForCodigoTarea = tareaActividadsForCodigoTarea;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "datoBasicoByCodigoTipoEgreso")
	public Set<CuentaPagar> getCuentaPagarsForCodigoTipoEgreso() {
		return this.cuentaPagarsForCodigoTipoEgreso;
	}

	public void setCuentaPagarsForCodigoTipoEgreso(
			Set<CuentaPagar> cuentaPagarsForCodigoTipoEgreso) {
		this.cuentaPagarsForCodigoTipoEgreso = cuentaPagarsForCodigoTipoEgreso;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "datoBasico")
	public Set<PersonaNatural> getPersonaNaturals() {
		return this.personaNaturals;
	}

	public void setPersonaNaturals(Set<PersonaNatural> personaNaturals) {
		this.personaNaturals = personaNaturals;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "datoBasico")
	public Set<ConceptoNomina> getConceptoNominas() {
		return this.conceptoNominas;
	}

	public void setConceptoNominas(Set<ConceptoNomina> conceptoNominas) {
		this.conceptoNominas = conceptoNominas;
	}

}
